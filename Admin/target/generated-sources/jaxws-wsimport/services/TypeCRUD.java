
package services;

import java.math.BigDecimal;
import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.8
 * Generated source version: 2.2
 * 
 */
@WebService(name = "TypeCRUD", targetNamespace = "http://services/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface TypeCRUD {


    /**
     * 
     * @param type
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addType", targetNamespace = "http://services/", className = "services.AddType")
    @ResponseWrapper(localName = "addTypeResponse", targetNamespace = "http://services/", className = "services.AddTypeResponse")
    @Action(input = "http://services/TypeCRUD/addTypeRequest", output = "http://services/TypeCRUD/addTypeResponse")
    public boolean addType(
        @WebParam(name = "type", targetNamespace = "")
        Type type);

    /**
     * 
     * @param arg0
     * @return
     *     returns services.Type
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findType", targetNamespace = "http://services/", className = "services.FindType")
    @ResponseWrapper(localName = "findTypeResponse", targetNamespace = "http://services/", className = "services.FindTypeResponse")
    @Action(input = "http://services/TypeCRUD/findTypeRequest", output = "http://services/TypeCRUD/findTypeResponse")
    public Type findType(
        @WebParam(name = "arg0", targetNamespace = "")
        BigDecimal arg0);

    /**
     * 
     * @return
     *     returns java.util.List<services.Type>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "viewType", targetNamespace = "http://services/", className = "services.ViewType")
    @ResponseWrapper(localName = "viewTypeResponse", targetNamespace = "http://services/", className = "services.ViewTypeResponse")
    @Action(input = "http://services/TypeCRUD/viewTypeRequest", output = "http://services/TypeCRUD/viewTypeResponse")
    public List<Type> viewType();

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateType", targetNamespace = "http://services/", className = "services.UpdateType")
    @ResponseWrapper(localName = "updateTypeResponse", targetNamespace = "http://services/", className = "services.UpdateTypeResponse")
    @Action(input = "http://services/TypeCRUD/updateTypeRequest", output = "http://services/TypeCRUD/updateTypeResponse")
    public boolean updateType(
        @WebParam(name = "arg0", targetNamespace = "")
        Type arg0);

    /**
     * 
     * @param id
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteOperation", targetNamespace = "http://services/", className = "services.DeleteOperation")
    @ResponseWrapper(localName = "deleteOperationResponse", targetNamespace = "http://services/", className = "services.DeleteOperationResponse")
    @Action(input = "http://services/TypeCRUD/deleteOperationRequest", output = "http://services/TypeCRUD/deleteOperationResponse")
    public boolean deleteOperation(
        @WebParam(name = "id", targetNamespace = "")
        int id);

}
